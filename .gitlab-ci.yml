# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  # Minu konteineri registri aadress AWS-s (Amazon Elastic Container Registry)
  # Asenda MINU_REGISTRI_NIMI
  DOCKER_REGISTRY: 662032419283.dkr.ecr.eu-north-1.amazonaws.com/chatapp

  stages:
    - build

  build:back-end:
  image:
    name: docker:27.3.1-alpine3.20
  services:
    - docker:27.3.1-alpine3.20
  only:
    - master
    - main
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install --break-system-packages awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
  script:
    - docker build -t ${DOCKER_REGISTRY}/back:${CI_COMMIT_SHA} ./BackEnd/
    - docker push ${DOCKER_REGISTRY}/back:${CI_COMMIT_SHA}
  after_script:
    - docker logout ${DOCKER_REGISTRY}
  stage: build
  artifacts:
    paths:
  tags:
    - itb2203

build:front-end:
  image:
    name: docker:27.3.1-alpine3.20
  services:
    - docker:27.3.1-alpine3.20
  only:
    - master
    - main
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install --break-system-packages awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
  script:
    - docker build -t ${DOCKER_REGISTRY}/front:${CI_COMMIT_SHA} ./FrontEnd/
    - docker push ${DOCKER_REGISTRY}/front:${CI_COMMIT_SHA}
  after_script:
    - docker logout ${DOCKER_REGISTRY}
  stage: build
  artifacts:
    paths:
  tags:
    - itb2203


